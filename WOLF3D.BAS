'SOME LITTLE CORE PARTS OF RAYCASTING CODE ARE ORIGINALLY FROM LABDEMO.BAS
'MODIFIED ON 10/14/1999 BY KEN SILVERMAN FOR RENDERING CLEANLINESS
'MODIFIED ON 2020 FOR WOLFENSTEIN 3D CMM2 PORT BY MAURO XAVIER

#INCLUDE "OPTIONS.INC"
#INCLUDE "SCREEN_FX.INC"
#INCLUDE "MAP_LOADER.INC"
#INCLUDE "DOORS.INC"
#INCLUDE "PLAYER_COLLISION.INC"
#INCLUDE "STAGE_CLEAR.INC"
#INCLUDE "ENEMIES.INC"

CLEAR

OPTION BASE 0

'FOR MAP LOADING | WORLD MAP: 0-WALLS, 1-OBJ, 2-DOORS, 3-SIDES OF DOORS
DIM MAPLOAD(128,128),MAPW(64,64,3)

'USED FOR ADD NEW OBJECTS OR ENEMIES
DIM SCR_OBJ(64,64)

'DOORS -- ACTIVATED? | X/Y COORDINATES | TIME COUNTER | TYPE | SECRET WALL RUN SIDE 
DIM DOOR(20),X_DOOR(20),Y_DOOR(20),DOOR_TIME(20),T_DOOR(20),XS_DOOR(20),YS_DOOR(20)

'OBJECTS / ENEMIES -- X/Y COORDINATES | TYPE | ANIMATION | ACTION | ENEMY ENERGY
DIM X_OBJ(400),Y_OBJ(400),T_OBJ(400),ANI_OBJ(400),ACT_OBJ(400),ENE_OBJ(400)

'FAKE Z BUFFER CUT | MENU OPTIONS | DISPONIBLE WEAPON
DIM Z_OBJ(640),OPTC(10),ON_WEAPON(3)


TOUGH=3
DEBUG=0          'DEBUG MODE

ZOOM    = 0      'ZOOM WINDOW
DETAIL  =-1      'AUTO DETAIL LEVEL
SC_SIZE = 0      'SCREEN SIZE
SFX_SND = 2      'SOUND EFFECTS?
MUSIC_BKG = 2    'BACKGROUND MUSIC?
ON_OPTIONS = 0   'BACKING FROM THE GAME OPTIONS INSIDE THE GAME?

'WANT TO START DIRECTLY TO TEST SOMETHING?
'GOTO START_GAME


'-- RESET ARRAYS --

SUB RESET_ARRAYS

 MATH SET 0,SCR_OBJ()
 MATH SET 0,DOOR()
 MATH SET 0,X_DOOR()
 MATH SET 0,Y_DOOR()
 MATH SET 0,DOOR_TIME()
 MATH SET 0,T_DOOR()
 MATH SET 0,XS_DOOR()
 MATH SET 0,YS_DOOR()
 DOOR_OPENING=0

 MATH SET 0,X_OBJ()
 MATH SET 0,Y_OBJ()
 MATH SET 0,T_OBJ()
 MATH SET 0,ANI_OBJ()
 MATH SET 0,ACT_OBJ()
 MATH SET 0,ENE_OBJ()

 MATH SET 200,Z_OBJ()
 MATH SET 0,OPTC()

END SUB


'-- CALL THE RENDERER OF THE DISPONIBLE OBJECTS --

SUB CALL_OBJECTS

 'CALL ENEMY CONTROL
 FOR OO=0 TO MAXENE
  'CUT OBJECTS IN SQUARED DISTANCE (BEFORE ROTATION) BUT CONTINUE IF A ENEMY SAW YOU
  IF (X_POS<X_OBJ(OO)-8 OR X_POS>X_OBJ(OO)+8 OR Y_POS<Y_OBJ(OO)-8 OR Y_POS>Y_OBJ(OO)+8) AND ACT_OBJ(OO)=0 THEN CONTINUE FOR
  IF T_OBJ(OO)>=1000 THEN CONTROL_ENEMY(OO) ELSE DRAW_OBJECT(OO)
 NEXT OO

 'RENDER OBJECTS
 IF MAXOBJ>MAXENE THEN
  FOR OO=MAXOBJ TO MAXENE+1 STEP -1
   DRAW_OBJECT(OO)    
  NEXT OO
 ENDIF
END SUB 


'-- INSERT A NEW OBJECT --

SUB O_ADD(X,Y,M)

 IF M=0 OR SCR_OBJ(X,Y)=1 THEN EXIT SUB 
 MAXOBJ=MAXOBJ+1 
 SCR_OBJ(X,Y)=1
 T_OBJ(MAXOBJ)=M
 X_OBJ(MAXOBJ)=X+0.5: Y_OBJ(MAXOBJ)=Y+0.5
 ACT_OBJ(MAXOBJ)=0

END SUB


'-- REFRESH STATUS BAR --

SUB REFRESH_STATUS_BAR

 SB_PRINT(48,177,SCORE,6)  
 SB_PRINT(22,177,LEVEL,0)
 SB_PRINT(113,177,LIVES,0)
 SB_PRINT(169,177,HEALTH,1)
 SB_PRINT(211,177,AMMO,3)  
 IF K_GOLD=1 THEN BLIT 314,0,241,167,6,11,13,0
 IF K_BLUE=1 THEN BLIT 314,11,241,183,6,11,13,0
 STATUS=0

END SUB


'-- RENDER OBJECTS --

SUB DRAW_OBJECT(O)

 'LOCAL X,Y,XX,YY,TYPE
 LOCAL A_ADJY,B_ADJY
 
 X=(Y_OBJ(O)-Y_POS)*SINVIS+(X_OBJ(O)-X_POS)*COSVIS
 Y=(Y_OBJ(O)-Y_POS)*COSVIS-(X_OBJ(O)-X_POS)*SINVIS

 'REMOVE IMAGE PROCESSING IF THE OBJECT IS OUT OF FIELD OF VIEW
 IF Y<-10 OR Y>0 OR X<-4 OR X>4 THEN EXIT SUB

 PIXEL X+MM.HRES/2,-Y+MM.VRES/2,RGB(0,255,0)
 PIXEL MM.HRES/2,MM.VRES/2,RGB(255,255,255)

 TYPE=T_OBJ(O)-1
 IF TYPE<0 THEN EXIT SUB

 Y=ABS(Y)/F_DIST

 IF Y=0 THEN EXIT SUB

 SY1 = B_Y_DIM-64/Y
 SY2 = B_Y_DIM+64/Y

 'CHANGE TEXTURE VIDEO PAGE 
 BY=(TYPE << 6)
 XL=((BY\192) << 6)
 YL=((BY\64) MOD 3) << 6
 PGBLK=(TYPE\15+1)+5: XL=XL-MM.HRES*(TYPE\15)

 'PERSPECTIVE CORRECTION OUTSIZE Y WINDOW
 IF SY1 < 4 THEN A_ADJY=(ABS(SY1-4)/(SY2-SY1))*64: SY1 = 4: IF A_ADJY<0 THEN A_ADJY=0
 IF SY2 >= Y_DIM THEN B_ADJY=(ABS(SY2-Y_DIM)/(SY2-SY1))*128: SY2 = Y_DIM: IF B_ADJY>63 THEN B_ADJY=63

 'CUT TEXTURE OF OBJECT IF OFFSCREEN
 IF SY1>=0 AND SY1<=B_Y_DIM THEN 

  T_SIZE=((128/Y+8)/64)*SIZE
  IF T_SIZE<1 THEN T_SIZE=1

  XQA=W_DIM+((X-0.5)*64)/(Y/2.4)
  XQB=(((128/Y)/64)*SIZE)

  'RENDER TEXTURED OBJECT WHEN ON SCREEN
  IF XQA+XQB*(0/SIZE)>0 AND XQA+XQB*(63/SIZE)<MM.HRES-T_SIZE THEN
   'OPTIMIZED VERSION
   FOR T=0 TO 64-SIZE STEP SIZE
    XT=XQA+XQB*(T/SIZE)
    IF SY2>Z_OBJ(XT\SIZE) THEN IMAGE RESIZE_FAST XL+T,YL+A_ADJY, SIZE,64-B_ADJY, XT,SY1, T_SIZE,SY2-SY1, PGBLK,1
   NEXT T
  ELSE
   'SLOWER VERSION (SCREEN CROP)
   FOR T=0 TO 64-SIZE STEP SIZE
    XT=XQA+XQB*(T/SIZE)
    IF XT>A_SCAN AND XT<B_SCAN-T_SIZE THEN
     IF SY2>Z_OBJ(XT\SIZE) THEN IMAGE RESIZE_FAST XL+T,YL+A_ADJY, SIZE,64-B_ADJY, XT,SY1, T_SIZE,SY2-SY1, PGBLK,1
    ENDIF
   NEXT T
  ENDIF

 ENDIF
 
END SUB


'-- DRAW WALL AND DOOR TEXTURES --

SUB DRAW_TEXTURE

 LOCAL A_ADJY,B_ADJY

 'SIDE WALL FOR DOORS
 IF D>0 THEN 
  IF MAPW(X_SCAN,Y_SCAN,3)=1 THEN MAPSCAN=20
 ELSE
  IF MAPW(X_SCAN,Y_SCAN,3)=2 THEN MAPSCAN=20
 ENDIF

 BY = ((INT(MAPSCAN)-1) << 6) + BX

 'GET CORRECT X COORDINATE FOR TEXTURE READING
 XL=(((BY\192) << 6) + BX) MOD MM.HRES

 'CUT TEXTURE AFTER A CLOSED DOOR
 IF DTX>(XL MOD 64) THEN EXIT SUB

 'DISTANCE
 T_DIST = (COSANG * (HX-X_POS) + SINANG * (HY-Y_POS))/F_DIST

 'FIND THE CEILING AND FLOOR BORDERS
 IF T_DIST=0 THEN EXIT SUB
 SY1 = B_Y_DIM-64/T_DIST
 SY2 = B_Y_DIM+64/T_DIST

 'PERSPECTIVE CORRECTION OUTSIZE Y WINDOW
 IF SY1 < 4 THEN A_ADJY=(ABS(SY1-4)/(SY2-SY1))*64: SY1 = 4
 IF SY2 > Y_DIM THEN B_ADJY=(ABS(SY2-Y_DIM)/(SY2-SY1))*128: SY2 = Y_DIM: IF B_ADJY>63 THEN B_ADJY=63
 
 'FAKE Z-BUFFER FOR OBJECTS
 Z_OBJ(SX\SIZE)=SY2

 'CHANGE TEXTURE VIDEO PAGE 
 PGBLK=SHAD+((MAPSCAN-1)\15+1)*2
 IF MAPSCAN>=45 THEN PGBLK=11 'GET LANDSCAPE AND ENDGAME TRIGGER FROM BOSS ANIMATION PAGE

 'FIX THE END OF TEXTURE READER WHEN SIZE <> 1
 IF XL MOD 64 > 64-SIZE THEN T_SIZE=64-(XL MOD 64) ELSE T_SIZE=SIZE
  
 'RESIZE SIZE X 64 IMAGE TO A SLICE OF RAYCASTER (MAKE TEXTURE) AND DRAW ON COLUMN SX
 SELECT CASE T_DIST
  CASE >2: IMAGE RESIZE_FAST XL-DTX,(((BY\64) MOD 3) << 6)+A_ADJY, T_SIZE,64-B_ADJY,SX, SY1, SIZE,SY2-SY1, PGBLK
  CASE 1.2 TO 2: IMAGE RESIZE_FAST XL-DTX,(((BY\64) MOD 3) << 6)+A_ADJY, T_SIZE/1.8,64-B_ADJY,SX, SY1, SIZE,SY2-SY1, PGBLK
  CASE <1.2: IMAGE RESIZE_FAST XL-DTX,(((BY\64) MOD 3) << 6)+A_ADJY, 0.5+T_SIZE/4,64-B_ADJY,SX, SY1, SIZE,SY2-SY1, PGBLK
 END SELECT
 
END SUB


'-- PLAY SOUND EFFECTS VERIFYING IF THERE IS BACKGROUND MUSIC --

SUB PLAY_SFX(SFX$,P)

 LOCAL SND$

 IF SFX_SND=0 THEN EXIT SUB

 SND$="./SOUNDS/"+SFX$+".WAV"

 IF P>=PR_SND THEN
  PR_SND=P
  IF MM.INFO(SOUND)="MODFILE" THEN
   PLAY EFFECT SND$,END_SFX
  ELSE
   PLAY STOP: PLAY WAV SND$,END_SFX
  ENDIF
 ENDIF

END SUB


'-- REMOVE SOUND FX PRIORITY AFTER PLAYED --

SUB END_SFX

 PR_SND=0

END SUB


'--- RESTART / START GAME ---

GAME_OPTIONS:

MODE 3,12

ACT=1
IF ON_OPTIONS=0 THEN SCR_TYPE$="TITLE"

'PAGE 13 - BJ FACES + END STAGE ANIMATION
PAGE WRITE 13: CLS
LOAD PNG "./IMAGES/BJ.PNG"

'MANAGE TITLE SCREEN AND OPTIONS LOOP
DO WHILE ACT=1

 SELECT CASE SCR_TYPE$
  CASE "TITLE": TITLE_SCREEN
  CASE "OPTIONS": OPTIONS_SCREEN
  CASE "SOUND_OPTIONS": SOUND_OPTIONS_SCREEN
  CASE "CONTROLS": CONTROLS_SCREEN
  CASE "GRAPHIC_OPTIONS": GRAPHIC_OPTIONS_SCREEN
  CASE "CREDITS": CREDITS_SCREEN
  CASE "HIGHSCORES": HIGHSCORES_SCREEN
  CASE "EPISODES": EPISODES_SCREEN
  CASE "HOW_TOUGH": HOW_TOUGH_SCREEN
 END SELECT

LOOP

'------- START MAIN GAME -------

START_GAME:

'CHANGE TO 16-BIT MODE
MODE 3,16

'RESET ALL VIDEO PAGES
FOR T=0 TO 13: PAGE WRITE T: CLS: NEXT T

'INITIAL STATUS - BUT NOT WHEN BACKING FROM THE GAME OPTIONS
IF ON_OPTIONS=0 THEN
 SCORE  = 0
 LEVEL  = 1
 LIVES  = 3
ENDIF

'------- RESTART GAME / RESPAWN FROM DEAD -------

RESTART_LEVEL:

'NOT RESTART VARIABLES IF BACKING FROM THE GAME OPTIONS
IF ON_OPTIONS=0 THEN 

 'INITIAL STATUS
 HAPPY  = 0    'HAPPY FACE?
 HEALTH = 100  'PLAYER'S HEALTH
 WEAPON = 1    'INITIAL WEAPON (PISTOL)
 WSPR   = 3    'WEAPON SPRITE NUMBER
 AMMO   = 8    'INITIAL AMMO
 POSZ   = 0    'HEIGHT

 LEVEL=LEVEL-1 'RESTORE LEVEL NUMBER

 'RESET WEAPONS
 ON_WEAPON(0)=1
 ON_WEAPON(1)=1
 ON_WEAPON(2)=0
 ON_WEAPON(3)=0

ENDIF

'------- START A LEVEL / NEXT LEVEL -------

LEVEL_START:

PLAY STOP

'PAGE 0 - MAIN PAGE WITH PANEL
PAGE WRITE 0: CLS
LOAD PNG "./IMAGES/PANEL.PNG"
LOAD PNG "./IMAGES/GET_PSYCHED.PNG",48,55

PSYCHED_BAR(2) 

'PAGE 13 - BJ FACES + END STAGE ANIMATION + STATUS BAR FONTS
PAGE WRITE 13: CLS
LOAD PNG "./IMAGES/BJ.PNG"

'RESTORE STATUS BAR
PAGE WRITE 0
IF ON_OPTIONS=0 THEN LEVEL=LEVEL+1
REFRESH_STATUS_BAR
HEADMV=0: HEADTIME=10
BJ_HEAD(HEALTH,0)

PSYCHED_BAR(4) 

'PAGE 1 - MAIN BUFFER
PAGE WRITE 1: CLS

PSYCHED_BAR(6) 

'PAGE 2 - MAIN STAGE TEXTURES
PAGE WRITE 2: CLS
LOAD PNG "./IMAGES/TEXTURES_1.PNG"

PSYCHED_BAR(8) 

'PAGE 3 - MAIN STAGE TEXTURES SHADOWED
PAGE WRITE 3: CLS
LOAD PNG "./IMAGES/TEXTURES_1_SHADOW.PNG"

PSYCHED_BAR(10) 

'PAGE 4 - MAIN STAGE TEXTURES 2
PAGE WRITE 4: CLS
LOAD PNG "./IMAGES/TEXTURES_2.PNG"

PSYCHED_BAR(12) 

'PAGE 5 - MAIN STAGE TEXTURES 2 SHADOWED
PAGE WRITE 5: CLS
LOAD PNG "./IMAGES/TEXTURES_2_SHADOW.PNG"

PSYCHED_BAR(14) 

'PAGE 6 - OBJECTS + BONUS
PAGE WRITE 6: CLS
LOAD PNG "./IMAGES/OBJECTS_1.PNG"

PSYCHED_BAR(16) 

'PAGE 7 - OBJECTS 2 + AMMO + WEAPONS + FOOD + MEDKIT
PAGE WRITE 7: CLS
LOAD PNG "./IMAGES/OBJECTS_2.PNG"

PSYCHED_BAR(18)

'PAGE 8 - OBJECTS 3 + ENEMY CORPSES
PAGE WRITE 8: CLS
LOAD PNG "./IMAGES/OBJECTS_3.PNG"

PSYCHED_BAR(20) 

'PAGE 10 - BROWN GUARD AND SS (FRONT ONLY VERSION)
PAGE WRITE 10: CLS
LOAD PNG "./IMAGES/GUARD_SS.PNG"

PSYCHED_BAR(22)

IF LEVEL<>9 THEN
 'PAGE 11 - DOG AND OFFICER (FRONT ONLY VERSION)
 PAGE WRITE 11: CLS
 LOAD PNG "./IMAGES/DOG_OFFICER.PNG"
ELSE
 'PAGE 11 - BOSS (FRONT ONLY VERSION)
 PAGE WRITE 11: CLS
 LOAD PNG "./IMAGES/BOSS1.PNG"
ENDIF

PSYCHED_BAR(24)

'PAGE 12 - WEAPONS
PAGE WRITE 12: CLS
LOAD PNG "./IMAGES/WEAPONS.PNG"

PSYCHED_BAR(26)

PLAY STOP

IF MUSIC_BKG=2 THEN
 SELECT CASE (LEVEL MOD 3)
  CASE 1: PLAY MODFILE "./MUSICS/BATTLE_PLAN.MOD",22050
  CASE 2: PLAY MODFILE "./MUSICS/THE_WAR.MOD",22050
  CASE 3: PLAY MODFILE "./MUSICS/ALIENI_VOL_1.MOD",22050
  CASE 0: PLAY MODFILE "./MUSICS/PIRATE_ARMY_OF_DARKNESS.MOD",22050
 END SELECT
 'PLAY MODFILE "./MUSICS/KATAKOMB.MOD",22050
ENDIF

'RESET ARRAYS AND LOAD LEVEL MAP - NOT WHEN BACKING FROM A GAME OPTIONS
IF ON_OPTIONS=0 THEN
 RESET_ARRAYS: LOAD_MAP("W1M"+STR$(LEVEL))
ELSE
 PSYCHED_BAR(100)
ENDIF

'SET SCREEN DETAIL
SCREEN_DETAIL(SC_SIZE,DETAIL)

'KEEP ON THIS LEVEL
NXT_LEVEL = 0 

'RESET KEYS - NOT WHEN BACKING FROM A GAME OPTIONS
IF ON_OPTIONS=0 THEN K_GOLD=0: K_BLUE=0

'REFRESH STATUS PANEL
STATUS = 1    

'RESET THE STATUS OF GAME OPTIONS PANEL
ON_OPTIONS = 0

'------------------------- START MAIN GAME LOOP --------------------------

DO WHILE NXT_LEVEL=0

 COSANG = COS(ANG)
 SINANG = SIN(ANG)

 COSVIS = COS(ANG+RAD(90))
 SINVIS = SIN(ANG+RAD(90))

 VXINC = SINANG * -2 / X_DIM
 VYINC = COSANG *  2 / X_DIM
 VX = COSANG + SINANG
 VY = SINANG - COSANG

 A_DIST=1: T_DIST=2

 'FOR SX = 6 - SIZE TO X_DIM - (7 - SIZE)
 FOR SX = A_SCAN TO B_SCAN STEP SIZE
 
  'RAYTRACE IN 2D TO SEE WHAT BLOCK IS HIT, AND WHERE IT GETS HIT
  X_SCAN = INT(X_POS): XDIR = SGN(VX): X_INC = ABS(VX)
  Y_SCAN = INT(Y_POS): YDIR = SGN(VY): Y_INC = ABS(VY)
  X_TEMP = X_POS - X_SCAN: IF XDIR > 0 THEN X_TEMP = 1 - X_TEMP
  Y_TEMP = Y_POS - Y_SCAN: IF YDIR > 0 THEN Y_TEMP = 1 - Y_TEMP
  D = X_TEMP * Y_INC - Y_TEMP * X_INC

  DO

   DTX=0
   IF D < 0 THEN
    SHAD=1
    X_SCAN = X_SCAN + XDIR
  
    'OBJECT
    O_ADD(X_SCAN,Y_SCAN,MAPW(X_SCAN,Y_SCAN,1))

    'WALLS
    MAPSCAN=MAPW(X_SCAN, Y_SCAN,0)    
    IF MAPSCAN THEN
     HX = X_SCAN: IF XDIR < 0 THEN HX = HX + 1
     HY = Y_POS + VY * (HX - X_POS) / VX
     BX = INT( (HY - INT(HY)) * 64)     
     IF XDIR < 0 THEN BX = 63 - BX
     'DOOR MASK
     IF MAPW(X_SCAN,Y_SCAN,2) THEN
      DTX=64-ABS(MAPW(X_SCAN,Y_SCAN,2))
      IF BX>=DTX THEN DRAW_TEXTURE: EXIT DO
     ELSE
      EXIT DO
     ENDIF
     'DOOR MASK
     'IF MAPW(X_SCAN,Y_SCAN,2) THEN
     ' IF MAPW(X_SCAN,Y_SCAN,3)=-1 THEN
       'SECRET WALL
     '  HX = X_SCAN-(64-ABS(MAPW(X_SCAN,Y_SCAN,2)))/64
     '  IF XDIR < 0 THEN HX = HX + 1
     '  HY = Y_POS + VY * (HX - X_POS) / VX
     '  BX = INT( (HY - INT(HY)) * 64)     
     '  IF XDIR < 0 THEN BX = 63 - BX
     '  DRAW_TEXTURE: EXIT DO
     ' ELSE
       'COMMON DOOR
     '   DTX=64-ABS(MAPW(X_SCAN,Y_SCAN,2))
     '   IF BX>=DTX THEN DRAW_TEXTURE: EXIT DO
     ' ENDIF
     'ELSE  
     ' EXIT DO
     'ENDIF
    ENDIF

    D = D + Y_INC 
   ELSE
    SHAD=0  
    Y_SCAN = Y_SCAN + YDIR
 
    'OBJECT
    O_ADD(X_SCAN,Y_SCAN,MAPW(X_SCAN,Y_SCAN,1))
    'WALLS
    MAPSCAN=MAPW(X_SCAN, Y_SCAN,0)
    IF MAPSCAN THEN
     HY = Y_SCAN: IF YDIR < 0 THEN HY = HY + 1
     HX = X_POS + VX * (HY - Y_POS) / VY
     BX = INT((HX - INT(HX)) * 64)
     IF YDIR > 0 THEN BX = 63 - BX
     'DOOR MASK
     IF MAPW(X_SCAN,Y_SCAN,2) THEN
      DTX=64-ABS(MAPW(X_SCAN,Y_SCAN,2))
      IF BX>=DTX THEN DRAW_TEXTURE: EXIT DO
     ELSE
      EXIT DO
     ENDIF
    END IF

    D = D - X_INC
   END IF

  LOOP

  DRAW_TEXTURE

  VX = VX + VXINC
  VY = VY + VYINC

 NEXT SX

 'CALL THE RENDERER OF DISPONIBLE OBJECTS
 CALL_OBJECTS

 'BLOCK ON PLAYER
 '?@(15,15) MAPW(INT(X_POS),INT(Y_POS))

 'KEYBOARD CONTROL CODE
 X_SPD=0: Y_SPD=0: SPD=0.25
 X_SPDX=0: Y_SPDY=0
 CTRL=0

 'READ MODIFIER KEYS
 T=KEYDOWN(7)
 MD$=RIGHT$("0000"+BIN$(T),4)
 'LCTRL - FIRE
 IF PEEK(VAR MD$,3)=49 AND ((AMMO>0 AND WEAPON>0) OR WEAPON=0) THEN  
  IF PLFIRE<2 AND FIRING=0 THEN
   
   CTRL=1
   SELECT CASE WEAPON
    CASE 0: 'KNIFE
     WSPR=-1: PLFIRE=2: FIRING=1
    CASE 1: 'PISTOL
     PLAY_SFX("WEAPON_PISTOL",0): STATUS=1: PLFIRE=2: AMMO=AMMO-1: WSPR=-1: FIRING=1
    CASE 2: 'MACHINE GUN
     IF PLFIRE=0 THEN W_SW=1
     PLAY_SFX("WEAPON_MACHINE_GUN",0): STATUS=1: PLFIRE=1: AMMO=AMMO-1: IF WSPR<1 THEN WSPR=0
    CASE 3: 'CHAIN GUN
     PLAY_SFX("WEAPON_CHAIN_GUN",0): STATUS=1: PLFIRE=1: AMMO=AMMO-1: WSPR=-1
     IF PLFIRE=0 THEN W_SW=0
   END SELECT

  ENDIF
 ELSE
  FIRING=0
 ENDIF
 'LALT - STRAFE
 IF PEEK(VAR MD$,4)=49 THEN STRAFE=1 ELSE STRAFE=0
 'LSHIFT - RUN
 R=1
 IF PEEK(VAR MD$,1)=49 THEN SPD=0.50: R=2

 C_WEAPON=-1
 FOR T=1 TO 5
  K = KEYDOWN(T) 
  SELECT CASE K
   CASE 49:  C_WEAPON=0                                    'KNIFE
   CASE 50:  IF AMMO>0 THEN C_WEAPON=1                     'PISTOL
   CASE 51:  IF ON_WEAPON(2)=1 AND AMMO>0 THEN C_WEAPON=2  'MACHINE GUN
   CASE 52:  IF ON_WEAPON(3)=1 AND AMMO>0 THEN C_WEAPON=3  'CHAIN GUN
   CASE 130: IF STRAFE=0 THEN ANG = ANG - .1*R ELSE X_SPDX =  SPD: Y_SPDY = -SPD 'LEFT
   CASE 131: IF STRAFE=0 THEN ANG = ANG + .1*R ELSE X_SPDX = -SPD: Y_SPDY =  SPD 'RIGHT
   CASE 128: IF STRAFE=0 THEN X_SPD =  SPD: Y_SPD =  SPD 'FORWARD
   CASE 129: IF STRAFE=0 THEN X_SPD = -SPD: Y_SPD = -SPD 'BACKWARD
   CASE 32:  OPENDOOR=1 'SPACE - OPEN DOOR
   CASE 65:  STAGE_CLEAR(LEVEL+1) 'TEST STAGE COMPLETED
   CASE 27:  ON_OPTIONS=1: SCR_TYPE$="OPTIONS": GOTO GAME_OPTIONS
   CASE 149: 
    IF PRESSED=0 THEN
     PRESSED=1
     PLAY_SFX("ADLIB_SELECTED",0)
     SC_SIZE=SC_SIZE+21: IF SC_SIZE>100 THEN SC_SIZE=0
     SCREEN_DETAIL(SC_SIZE,DETAIL)
    ENDIF
   CASE 150: 
    IF PRESSED=0 THEN
     PRESSED=1
     PLAY_SFX("ADLIB_SELECTED",0)
     IF ZOOM=1 THEN ZOOM=0 ELSE ZOOM=1
     SCREEN_DETAIL(SC_SIZE,DETAIL)
    ENDIF
  END SELECT
 NEXT T

 'START THE OPENNING DOOR ANIMATION
 IF OPENDOOR=1 THEN
  SELECT CASE MAPW(INT(X_POS+COSANG),INT(Y_POS+SINANG),0)
   CASE 15    TO 16.50 : OPEN_DOOR(INT(X_POS+COSANG),INT(Y_POS+SINANG)) 'DOORS AND ELEVATOR DOORS
   CASE 17    TO 17.30 : IF K_GOLD=1 THEN OPEN_DOOR(INT(X_POS+COSANG),INT(Y_POS+SINANG)) 'GOLDEN KEY DOOR
   CASE 17.50 TO 17.76 : IF K_BLUE=1 THEN OPEN_DOOR(INT(X_POS+COSANG),INT(Y_POS+SINANG)) 'SILVER KEY DOOR
   CASE 18: PLAY_SFX("EXIT",100): PAUSE(750): STAGE_CLEAR(LEVEL+1) 'ELEVATOR SWITCH - STAGE CLEAR
  END SELECT
  'SECRET WALL
  IF MAPW(INT(X_POS+COSANG),INT(Y_POS+SINANG),2)=-64 THEN PUSH_WALL(INT(X_POS+COSANG),INT(Y_POS+SINANG))
 ENDIF

 'SCAN FOR DOOR ANIMATION
 FOR T=0 TO 3
  DOOR_ANIMATION(T)
 NEXT T

 'CHECK FOR PLAYER COLLISION WITH BLOCKS
 PLAYER_COLLISION

 'REMOVE WEAPON SHRINK AND WINDOW SIZE WHEN ZOOM IS ON
 TT=0: TTT=0
 IF ZOOM=1 THEN TT=F_DIST: TTT=WX_SIZE: WX_SIZE=0: F_DIST=1

 'CHANGE WEAPON
 IF C_WEAPON>=0 THEN
  IF C_WEAPON <> WEAPON THEN CHANGE_WEAPON(C_WEAPON)
 ENDIF

 'RESTORE WEAPON WHEN CHANGE DETAILS OR SET ZOOM
 IF PRESSED THEN CHANGE_WEAPON(WEAPON)

 'DRAW WEAPON
 T=(4-WSPR*2)
 IF PLFIRE>0 THEN
  T=(-WSPR)
  WSPR=WSPR+1
  IF WEAPON>=2 AND CTRL=1 AND AMMO>0 THEN
   WSPR=W_SW+1: T=0
   IF WEAPON=2 THEN PLFIRE=WSPR: WSPR=W_SW: T=-(6-WSPR*2) 'SLOWDOWN MACHINE GUN
  ELSE
   IF WSPR>1 THEN PLFIRE=1
   IF WSPR>3 THEN WSPR=3: PLFIRE=0: T=0
  ENDIF
 ENDIF
 IF WX_SIZE=0 THEN
  BLIT (WSPR<<6),68-T,MM.HRES/2-32,MM.VRES/2+2,64,58+T,12,4
 ELSE
  BLIT (WSPR<<6)*F_DIST,68-T*F_DIST,MM.HRES/2-32*F_DIST,MM.VRES/2-21+(24+T)*F_DIST-WX_SIZE/2,64*F_DIST,58+T*F_DIST,12,4
 ENDIF

 'RESTORE ELEMENTS AND WINDOWS SIZE FOR ALL OTHER ASPECTS WHEN ZOOM IS ON
 IF ZOOM=1 THEN F_DIST=TT: WX_SIZE=TTT

 'DISCARD SPACE KEY CONTINUOUSLY PRESSED 
 T=KEYDOWN(1)
 IF T<>32 THEN OPENDOOR=0
 IF T<149 OR T>150 THEN PRESSED=0

 'WINDOWED MODE - WRITE ON THE MAIN SCREEN
 PAGE WRITE 0

 'MOVING BJ HEAD EYES
 IF HEALTH>=0 THEN BJ_HEAD(HEALTH,HAPPY): IF HAPPY>0 THEN HAPPY=HAPPY-1
 IF HEALTH<0 THEN HEALTH=0

 'REFRESH STATUS BAR
 IF STATUS = 1 THEN REFRESH_STATUS_BAR

 'RED SCREEN WHEN PLAYER IS HURT
 IF RED_HURT=1 THEN
  PAGE WRITE 1
  BOX 8,4,MM.HRES-16,MM.VRES-48,0,,RGB(255,0,0) 
  PAGE WRITE 0
  RED_HURT=0
 ENDIF

 IF ZOOM=0 OR WX_SIZE=0 THEN
  'NOT ZOOMED WINDOW
  BLIT 8+WX_SIZE,4,8+WX_SIZE,4+WX_SIZE/2,MM.HRES-16-WX_SIZE*2,MM.VRES-48-WX_SIZE,1,0
 ELSE 
  'ZOOMED WINDOW
  PAGE WRITE 1
  IMAGE RESIZE_FAST 8+WX_SIZE,4,MM.HRES-16-WX_SIZE*2,MM.VRES-48-WX_SIZE,8,4,MM.HRES-16,MM.VRES-48,1,0
  BLIT (WSPR<<6),68-T,MM.HRES/2-32,MM.VRES/2,64,56+T,12,4
  PAGE WRITE 0
  BLIT 8,4,8,4,MM.HRES-16,MM.VRES-48,1,0
 ENDIF

 'FPS COUNTER
 T=TIMER-TIFPS
 TIFPS=TIMER

 'SHOW DEBUG INFORMATIONS
 IF DEBUG=1 THEN
  PRINT @(10,12) "F "+FORMAT$(1000/T,"%2.2f") 'FPS
  PRINT @(10,22) RIGHT$("G "+STR$(SIZE),3)        'RAYCAST SLICE SIZE (DETAIL)
  PRINT @(10,33) RIGHT$("B0 "+STR$(MAPW(INT(X_POS+COSANG),INT(Y_POS+SINANG),0)),3) 'BLOCK IN FRONT
  PRINT @(10,44) RIGHT$("B1 "+STR$(MAPW(INT(X_POS+COSANG),INT(Y_POS+SINANG),1)),3) 'BLOCK IN FRONT
  PRINT @(10,55) RIGHT$("O "+STR$(MAXOBJ),3)      'NUMBER OF OBJECTS ON MAP
 ENDIF
 MAXOBJ=MAXENE
 MATH SET 0,SCR_OBJ()

 'AUTO GRAPHICS DETAIL
 IF DETAIL<0 THEN
  IF 1000/T < 7+(WX_SIZE\40) THEN 
   SIZE=SIZE+2: IF SIZE>10 THEN SIZE=10
   X_DIM = (B_SCAN - A_SCAN)/SIZE
  ENDIF
  IF 1000/T > 10+(WX_SIZE\20) THEN
   SIZE=SIZE-2: IF SIZE<1 THEN SIZE=1
   X_DIM = (B_SCAN - A_SCAN)/SIZE
  ENDIF
 ENDIF

 PAGE WRITE 1
 FLOOR_CELLING(56,56,56,113,113,113)

 'GENERIC SWAPPER
 IF SW=0 THEN SW=1 ELSE SW=0

 'SWAPPER FOR WEAPON ANIMATION
 IF W_SW=0 THEN W_SW=1 ELSE W_SW=0

LOOP

GOTO LEVEL_START

