'-- RENDER AND CONTROL ENEMIES --

SUB CONTROL_ENEMY(O)

 LOCAL A_ADJY, B_ADJY, X_SPD, Y_SPD, EN_DEAD, EX_SIZE, EY_SIZE

 'ENEMY ACTION
 IF ACT_OBJ(O)>0 THEN

  SELECT CASE ACT_OBJ(O)
   CASE 1:
    'WALKING SPEED
    SELECT CASE T_OBJ(O)
     CASE 1000,1001:   E_SPD=0.10 'BROWN GUARD / SS
     CASE 1002:        E_SPD=0.20 'DOG
     CASE 1010:        E_SPD=0.20 'BOSS
     CASE ELSE:        E_SPD=0.10 'OFFICE
    END SELECT 
    'CHASE PLAYER   
    IF X_OBJ(O)>=X_POS+0.5 THEN X_SPD=-E_SPD
    IF X_OBJ(O)<=X_POS-1 THEN X_SPD= E_SPD
    IF Y_OBJ(O)>=Y_POS+0.5 THEN Y_SPD=-E_SPD
    IF Y_OBJ(O)<=Y_POS-1 THEN Y_SPD= E_SPD
    IF X_SPD<>0 OR Y_SPD<>0 THEN
     ANI_OBJ(O)=ANI_OBJ(O)+1: IF ANI_OBJ(O)>4 THEN ANI_OBJ(O)=1
    ELSE
     ANI_OBJ(O)=0
    ENDIF

   CASE 2 TO 10:
    'FIRING
    ACT_OBJ(O)=ACT_OBJ(O)+1
    ANI_OBJ(O)=ACT_OBJ(O)+2    
    SELECT CASE ANI_OBJ(O)
     CASE 7: 
      IF T_OBJ(O)<>1002 THEN 'IF IT'S NOT A DOG

       'DETERMINE THE DISTANCE BETWEEN THE ENEMY AND THE PLAYER
       T=INT(SQR((X_POS-X_OBJ(O))^2 + (Y_POS-Y_OBJ(O))^2))*3
 
       SELECT CASE T_OBJ(O) 
        CASE 1000,1003: PLAY_SFX("BROWN GUARD PISTOL SOUND",0)
        CASE 1001: PLAY_SFX("SS_MACHINE_GUN",50)
        CASE 1010: PLAY_SFX("QUICK_MACHINE_GUN",50)
       END SELECT
       T=ABS(10+TOUGH*5-T): IF T<0 THEN T=0
       IF INT(RND(1)*6)<TOUGH+(T_OBJ(O)-1000)/2 THEN RED_HURT=1: HEALTH=HEALTH - T
 
      ELSE 'IT'S A DOG

       RED_HURT=1: HEALTH=HEALTH - TOUGH*5
       PLAY_SFX("DOG_DOUBLE_BARK",50): ACT_OBJ(O)=31

      ENDIF
      STATUS=1
     CASE 8: ANI_OBJ(O)=7
     CASE >=9: ANI_OBJ(O)=6
    END SELECT      
   CASE 11 TO 19:
    'STOP FIRING
    ACT_OBJ(O)=1
   CASE 20 TO 21:
    'RECOVER ENEMY HURT
    ACT_OBJ(O)=1
   CASE 30:
    'BROWN GUARD / SS / DOG / OFFICE DEATH
    ANI_OBJ(O)=ANI_OBJ(O)+1
    IF ANI_OBJ(O)>=11 THEN EX_SIZE=10: IF T_OBJ(O)=1002 THEN EX_SIZE=24
    IF ANI_OBJ(O)=12 THEN ANI_OBJ(O)=13: ACT_OBJ(O)=-1: EN_DEAD=2
   CASE 31: ANI_OBJ(O)=7: ACT_OBJ(O)=32
   CASE 32: ANI_OBJ(O)=6: ACT_OBJ(O)=33
   CASE 33: ANI_OBJ(O)=5: ACT_OBJ(O)=34
   CASE 34: ANI_OBJ(O)=0: ACT_OBJ(O)=1
  END SELECT 

  IF T_OBJ(O)=1002 THEN E_OPENDOOR=-1 'DOGS DOESN'T OPEN DOORS

  'ALLOW ENEMY SLIDE NEAR THE WALLS AND OPEN DOORS
  IF SW=0 THEN
   FOR TX=-0.5 TO 0.5 STEP 0.5
    FOR TY=-0.5 TO 0.5 STEP 0.5
     T=MAPW(INT(X_OBJ(O)+X_SPD*5+TX),INT(Y_OBJ(O)+Y_SPD*5+TY),0)
     IF T>0 THEN X_SPD=0
     T=MAPW(INT(X_OBJ(O)+X_SPD*5+TX),INT(Y_OBJ(O)+Y_SPD*5+TY),0)
     IF T>0 THEN Y_SPD=0
   NEXT TY,TX
  ELSE
   FOR TX=-0.5 TO 0.5 STEP 0.5
    FOR TY=-0.5 TO 0.5 STEP 0.5
     T=MAPW(INT(X_OBJ(O)+X_SPD*5+TX),INT(Y_OBJ(O)+Y_SPD*5+TY),0)
     IF T>=15 AND T<=16.5 AND E_OPENDOOR=0 THEN E_OPENDOOR=1: OPEN_DOOR(INT(X_OBJ(O)+X_SPD*5+TX),INT(Y_OBJ(O)+Y_SPD*5+TY))
     IF T>0 THEN Y_SPD=0
     T=MAPW(INT(X_OBJ(O)+X_SPD*5+TX),INT(Y_OBJ(O)+Y_SPD*5+TY),0)
     IF T>=15 AND T<=16.5 AND E_OPENDOOR=0 THEN E_OPENDOOR=1: OPEN_DOOR(INT(X_OBJ(O)+X_SPD*5+TX),INT(Y_OBJ(O)+Y_SPD*5+TY))
     IF T>0 THEN X_SPD=0
   NEXT TY,TX
  ENDIF 

  'PLAYER IS ON THE ROUTE?
  X_OBJ(O)=X_OBJ(O)+X_SPD: Y_OBJ(O)=Y_OBJ(O)+Y_SPD

  IF T_OBJ(O)<>1002 THEN 'IF THE ENEMY ISN'T A DOG

   'FIRE ON PLAYER IN ANY DIRECTION, BUT NOT AFTER WALLS
   L_VIEW=0: R_VIEW=0: U_VIEW=0: D_VIEW=0
   FOR T=0 TO 5
    IF INT(X_OBJ(O)+T)<64 AND R_VIEW<=0 THEN
     IF MAPW(INT(X_OBJ(O)+T),INT(Y_OBJ(O)),0)=0 THEN R_VIEW=-T ELSE R_VIEW=T
    ENDIF
    IF INT(X_OBJ(O)-T)> 0 AND L_VIEW<=0 THEN
     IF MAPW(INT(X_OBJ(O)-T),INT(Y_OBJ(O)),0)=0 THEN L_VIEW=-T ELSE L_VIEW=T
    ENDIF
    IF INT(Y_OBJ(O)-T)> 0 AND U_VIEW<=0 THEN
     IF MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)-T),0)=0 THEN U_VIEW=-T ELSE U_VIEW=T
    ENDIF
    IF INT(Y_OBJ(O)+T)<64 AND D_VIEW<=0 THEN
     IF MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)+T),0)=0 THEN D_VIEW=-T ELSE D_VIEW=T
    ENDIF
   NEXT T 

   'FIRE!
   IF X_OBJ(O)-ABS(L_VIEW)<=X_POS AND X_OBJ(O)+ABS(R_VIEW)>=X_POS AND Y_OBJ(O)-ABS(U_VIEW)<=Y_POS AND Y_OBJ(O)+ABS(D_VIEW)>=Y_POS THEN
    IF (RND(1)*100>85+(T_OBJ(O)-1000)) AND ACT_OBJ(O)=1 THEN ACT_OBJ(O)=2
   ENDIF

  ELSE 'IT'S A DOG

   'DOG HURTING PLAYER
   IF X_OBJ(O)<=X_POS+1 AND X_OBJ(O)>=X_POS-1.5 AND Y_OBJ(O)<=Y_POS+1 AND Y_OBJ(O)>=Y_POS-1.5 THEN
    IF ACT_OBJ(O)=1 THEN ACT_OBJ(O)=2
   ENDIF
 
  ENDIF

 ELSE
  'SEARCH FOR PLAYER BUT DOES'T SEARCH AFTER WALLS
  L_VIEW=0: R_VIEW=0: U_VIEW=0: D_VIEW=0
  FOR T=0 TO 10
   IF INT(X_OBJ(O)+T)<64 AND R_VIEW<=0 THEN
    IF MAPW(INT(X_OBJ(O)+T),INT(Y_OBJ(O)),0)=0 THEN R_VIEW=-T ELSE R_VIEW=T
   ENDIF
   IF INT(X_OBJ(O)-T)>0 AND L_VIEW<=0 THEN
    IF MAPW(INT(X_OBJ(O)-T),INT(Y_OBJ(O)),0)=0 THEN L_VIEW=-T ELSE L_VIEW=T
   ENDIF
   IF INT(Y_OBJ(O)-T)>0 AND U_VIEW<=0 THEN
    IF MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)-T),0)=0 THEN U_VIEW=-T ELSE U_VIEW=T
   ENDIF
   IF INT(Y_OBJ(O)+T)<64 AND D_VIEW<=0 THEN
    IF MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)+T),0)=0 THEN D_VIEW=-T ELSE D_VIEW=T
   ENDIF
  NEXT T
  'FOUND THE PLAYER?
  IF X_OBJ(O)-ABS(L_VIEW)<=X_POS AND X_OBJ(O)+ABS(R_VIEW)>=X_POS AND Y_OBJ(O)-ABS(U_VIEW)<=Y_POS AND Y_OBJ(O)+ABS(D_VIEW)>=Y_POS THEN
   ENEMY_SPOTTED(T_OBJ(O)-1000,O)
  ENDIF
 ENDIF

 'ROTATE ENEMIES
 X=(Y_OBJ(O)-Y_POS)*SINVIS+(X_OBJ(O)-X_POS)*COSVIS
 Y=(Y_OBJ(O)-Y_POS)*COSVIS-(X_OBJ(O)-X_POS)*SINVIS

 'REMOVE IMAGE PROCESSING IF THE ENEMY IS OUT OF FIELD OF VIEW
 IF Y<-10 OR Y>0 OR X<-4 OR X>4 THEN EXIT SUB

 'VERIFY IF ENEMY IS ON PLAYER CENTERED VISION TO BE SHOOTED
 IF X-0.25>=-0.40 AND X-0.25<=0.40 THEN EN_CENTERED=1 ELSE EN_CENTERED=0

 SEE_PLAYER=1

 'PIXEL X+MM.HRES/2,-Y+MM.VRES/2,RGB(0,255,0)
 'PIXEL MM.HRES/2,MM.VRES/2,RGB(255,255,255)

 Y=ABS(Y)/F_DIST

 TYPE=T_OBJ(O)-1000

 IF Y=0 THEN EXIT SUB

 SY1 = B_Y_DIM-32/Y
 SY2 = B_Y_DIM+64/Y
 Y_SIZE=SY2-SY1

 'CHANGE TEXTURE VIDEO PAGE 
 IF TYPE<10 THEN
  'COMMON ENEMIES
  BY=ANI_OBJ(O)*32
  XL=(BY MOD 320)
  YL=(BY\320)*48
  IF TYPE<=1 THEN PGBLK=10 ELSE PGBLK=11
  IF TYPE=1 OR TYPE=3 THEN YL=96: IF ANI_OBJ(O)>=11 THEN YL=152 ELSE EY_SIZE=8
 ELSE
  'BOSS
  BY=ANI_OBJ(O)*64
  XL=(BY MOD 320)
  YL=(BY\320)*64
  PGBLK=11
  EX_SIZE=32: EY_SIZE=16
 ENDIF

 'PERSPECTIVE CORRECTION OUTSIZE Y WINDOW
 IF SY1 < 4 THEN A_ADJY=(ABS(SY1-4)/Y_SIZE)*64: SY1 = 4
 IF SY2 >= Y_DIM THEN B_ADJY=(ABS(SY2-Y_DIM)/Y_SIZE)*64: SY2 = Y_DIM: IF B_ADJY>31 THEN B_ADJY=31

 'CUT ENEMY TEXTURE OF OBJECT IF OFFSCREEN
 IF SY1>=0 AND SY1<=B_Y_DIM THEN 

  XQA=W_DIM+((X-0.5)*64)/(Y/2.4)
  XQB=(((64/Y)/32)*SIZE)

  T_SIZE=(((64/Y)+4)/32)*SIZE  
  
  'RENDER ENEMY AND CONTROL IT ONLY WHEN ON SCREEN
  IF (XQA+XQB*(0/SIZE)-TSZ)>0 AND (XQA+XQB*(31/SIZE))<MM.HRES-T_SIZE THEN

   'A LITTLE OPTIMIZED VERSION
   FOR T=0 TO 32-SIZE+EX_SIZE STEP SIZE

    XT=(XQA+XQB*(T/SIZE))
    IF SY2>Z_OBJ(INT(XT/SIZE)) THEN
     IMAGE RESIZE_FAST XL+T,YL+A_ADJY, SIZE,48-B_ADJY+EY_SIZE, XT, SY1, T_SIZE,SY2-SY1, PGBLK,1
    ELSE
     SEE_PLAYER=0
    ENDIF

   NEXT T
  ELSE
   SEE_PLAYER=0
   'SLOWER VERSION (SCREEN CROP)
   FOR T=0 TO 32-SIZE+EX_SIZE STEP SIZE
    XT=XQA+XQB*(T\SIZE)
    IF XT>A_SCAN AND XT<B_SCAN-T_SIZE THEN
 
     IF SY2>Z_OBJ(XT\SIZE) THEN
      IMAGE RESIZE_FAST XL+T,YL+A_ADJY+EY_SIZE, SIZE,48-B_ADJY, XT,SY1, T_SIZE,SY2-SY1, PGBLK,1
     ELSE
      SEE_PLAYER=0
     ENDIF
 
    ENDIF
   NEXT T
  ENDIF

  'CAN THE ENEMY SEE THE PLAYER?
  IF SEE_PLAYER=1 AND EN_DEAD=0 THEN
   'PLAYER SPOTTED!
   IF ACT_OBJ(O)=0 THEN
    ENEMY_SPOTTED(TYPE,O)
   ELSE
    IF T_OBJ(O)<>1002 THEN 'IF ISN'T A DOG THEN FIRE!    
     IF RND(1)*100>85 AND ACT_OBJ(O)=1 THEN ACT_OBJ(O)=2
    ENDIF
   ENDIF
  ENDIF

  'CAN PLAYER SEE THE ENEMY? - HURT ENEMY WHEN PLAYER IS FIRING
  IF PLFIRE>0 AND ACT_OBJ(O)<20 AND EN_DEAD=0 AND EN_CENTERED THEN
   
   'HURT THE ENEMY DEPENDING ON DISTANCE
   T_ANI=0
   IF WEAPON=0 THEN
    'KNIFE ONLY NEAR THE ENEMY
    IF X_OBJ(O)<=X_POS+1 AND X_OBJ(O)>=X_POS-1.5 AND Y_OBJ(O)<=Y_POS+1 AND Y_OBJ(O)>=Y_POS-1.5 AND WSPR=3 THEN
     ENE_OBJ(O)=ENE_OBJ(O)-(SY2/F_DIST)\10: T_ANI=1
     IF T_OBJ(O)<>1002 THEN PLAY_SFX("brown_guard_dead_3",100)
    ENDIF
   ELSE
    ENE_OBJ(O)=ENE_OBJ(O)-(SY2/F_DIST)\10: T_ANI=1
   ENDIF

   'ENEMY DEAD
   IF ENE_OBJ(O)<0 THEN

    EN_DEAD=1:K_FLOOR=K_FLOOR+1
    SELECT  CASE T_OBJ(O)
     CASE 1000: 'BROWN GUARD
      PLAY_SFX("BROWN_GUARD_DEAD_"+STR$(INT(RND(1)*8+1)),0 )
      ACT_OBJ(O)=30: ANI_OBJ(O)=10
      SCORE=SCORE+100: STATUS=1
     CASE 1001: 'SS GUARD
      PLAY_SFX("SS_DEATH",100)
      ACT_OBJ(O)=30: ANI_OBJ(O)=10
      SCORE=SCORE+150: STATUS=1
     CASE 1002: 'DOG
      PLAY_SFX("DOG_DEATH",100)
      ACT_OBJ(O)=30: ANI_OBJ(O)=10
      SCORE=SCORE+200: STATUS=1
     CASE 1003: 'OFFICER
      PLAY_SFX("OFFICER_DEAD",100)
      ACT_OBJ(O)=30: ANI_OBJ(O)=10
      SCORE=SCORE+150: STATUS=1
     CASE 1010: 'BOSS 1
      PLAY_SFX("BOSS_1_MOOTEE",100)
      ACT_OBJ(O)=30: ANI_OBJ(O)=10
      SCORE=SCORE+1000: STATUS=1
    END SELECT
   ELSE 
    'ENEMY HURT ANIMATION
    IF T_ANI=1 THEN
     SELECT  CASE T_OBJ(O)
      CASE 1000 TO 1003: 'BROWN GUARD / SS / DOG / OFFICER
       ANI_OBJ(O)=9: ACT_OBJ(O)=20
     END SELECT
    ENDIF

   ENDIF 'ENE_OBJ(O)<0

  ENDIF 'PLFIRE>0

 ENDIF
 
 'ENEMY DEAD TURNS IN A CORPSE (AS A SCENE OBJECT)
 IF EN_DEAD=2 THEN
  ACT_OBJ(O)=0: ANI_OBJ(O)=0: ENE_OBJ(O)=-1
  SELECT CASE T_OBJ(O)
   CASE 1000: T_OBJ(O)=31:TT=-4  'BROWN GUARD
   CASE 1001: T_OBJ(O)=32:TT=-8  'SS
   CASE 1002: T_OBJ(O)=33:       'DOG
   CASE 1003: T_OBJ(O)=34:TT=-4  'OFFICE
   CASE 1010: T_OBJ(O)=43:TT=-16 'BOSS 1
  END SELECT  
  'ENEMY DROP AMMO (BUT NOT DOGS!)
  IF MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)),0)=0 AND MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)),1)=0 THEN
   IF T_OBJ(O)<>33 AND T_OBJ(O)<>43 THEN
    'COMMON ENEMY DROP AMMO
    MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)),0)=-99 'OBJECT SET TO RENDER ON MAP LAYER
    MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)),1)=16  'AMMO ON OBJECT LAYER
    MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)),2)=TT  'NUMBER OF AMMO ON DOORS LAYER
   ENDIF
  ENDIF
  IF T_OBJ(O) = 43 THEN
   'BOSSES GIVES GOLDEN KEY - FIX THIS
   K_GOLD=1: STATUS=1
   'MAPW(INT(X_OBJ(O)),INT(Y_OBJ(O)),1)=21 'GOLDEN KEY ON OBJECT LAYER
  ENDIF
 ENDIF

END SUB


'-- ENEMY REACTION WHEN SPOTTED THE PLAYER --

SUB ENEMY_SPOTTED(T,O)

 SELECT CASE T
  CASE  0: PLAY_SFX("BROWN_GUARD_SPOTTED",0)
  CASE  1: PLAY_SFX("SS_SPOTTED",100)
  CASE  2: PLAY_SFX("DOG_BARK",100)
  CASE  3: PLAY_SFX("OFFICER_SPOTTED",100)
  CASE 10: PLAY_SFX("BOSS_1_GUTEN_TAG",100)
 END SELECT
 ACT_OBJ(O)=1

END SUB


